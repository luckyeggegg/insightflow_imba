name: Terraform Batch Ingestion

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'terraform/dev/**'
      - 'terraform/modules/data_ingestion/batch/**'
      - '.github/workflows/deploy_batch_ingestion.yml'
      - 'terraform/assets/batch_ingestion_lambda.zip'

permissions:
  contents: read

jobs:
  terraform:
    name: Apply Batch Ingestion Module
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-southeast-2
      TF_VAR_aws_region: ap-southeast-2
      TF_VAR_raw_bucket: insightflow-raw-bucket
      TF_VAR_clean_bucket: insightflow-clean-bucket

      TF_VAR_lambda_function_name: batch_ingestion
      TF_VAR_lambda_handler: lambda_function.lambda_handler
      TF_VAR_lambda_runtime: python3.13
      TF_VAR_lambda_zip_path: ./assets/batch_ingestion_lambda.zip
      TF_VAR_lambda_timeout: 900
      TF_VAR_lambda_memory_size: 1024

      TF_VAR_eventbridge_rule_name: batch_ingestion_trigger
      TF_VAR_eventbridge_rule_description: "Trigger batch ingestion Lambda on 30th of every month at 00:00 Sydney time"
      TF_VAR_eventbridge_schedule_expression: cron(0 14 30 * ? *) # 00:00 Sydney time on the 30th of every monthã€‚ Update as needed. Note there is summer and winter time difference and need to adjust accordingly.

      TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
      TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
      TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      TF_VAR_snowflake_role: ${{ secrets.SNOWFLAKE_ROLE }}
      TF_VAR_snowflake_warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/dev

      - name: Terraform Plan (Batch Ingestion Only)
        run: terraform plan -input=false -target=module.batch_ingestion
        working-directory: terraform/dev

      - name: Terraform Apply (Batch Ingestion Only)
        run: terraform apply -auto-approve -target=module.batch_ingestion
        working-directory: terraform/dev